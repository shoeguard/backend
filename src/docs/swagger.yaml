definitions:
  customErrors.ErrorResponse:
    properties:
      detail:
        type: string
      error:
        type: string
    type: object
  forms.AddRecordedAudioURLForm:
    properties:
      audio_url:
        type: string
    type: object
  forms.ReportRequestForm:
    properties:
      device_info:
        example: 00:11:22:33:FF:EE
        type: string
      latitude:
        example: 37.5428147089301
        type: number
      longitude:
        example: 126.96631451849314
        type: number
    type: object
  forms.ReportResponse:
    properties:
      created_at:
        type: string
      device_info:
        example: 00:11:22:33:FF:EE
        type: string
      id:
        type: integer
      latitude:
        example: 37.5428147089301
        type: number
      longitude:
        example: 126.96631451849314
        type: number
      recorded_audio_url:
        type: string
      updated_at:
        type: string
    type: object
  forms.ReportsResponse:
    properties:
      is_report_of_student:
        type: boolean
      reports:
        items:
          $ref: '#/definitions/forms.ReportResponse'
        type: array
    type: object
  forms.UserRegistrationForm:
    properties:
      is_student:
        type: boolean
      nickname:
        example: mengmota
        type: string
      partner_phone_number:
        example: "01012341234"
        type: string
      password:
        description: password field
        example: the!@#$pas123
        type: string
      phone_number:
        description: username field
        example: "01043214321"
        type: string
    type: object
info:
  contact: {}
  title: ShoeGuard Main Backend API
  version: "1.0"
paths:
  /report:
    get:
      consumes:
      - application/json
      description: Get reports from me or from my partners
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.ReportsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/customErrors.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Get reports
    post:
      consumes:
      - application/json
      description: Report Request with given information
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/forms.ReportRequestForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/forms.ReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/customErrors.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Report Request
  /report/{report_id}:
    patch:
      consumes:
      - application/json
      description: Add recorded audio url to given ID's report
      parameters:
      - description: Report ID
        in: path
        name: report_id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/forms.AddRecordedAudioURLForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.ReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/customErrors.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Add recorded audio url
  /users/register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/forms.UserRegistrationForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/forms.UserRegistrationForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/customErrors.ErrorResponse'
      summary: Register an user with given information
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
